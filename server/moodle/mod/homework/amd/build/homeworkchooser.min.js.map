{"version":3,"file":"homeworkchooser.min.js","sources":["../src/homeworkchooser.js"],"sourcesContent":["// homeworkchooser.js\n\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport MyModal from 'mod_homework/modal_homework';\nimport ModalEvents from 'core/modal_events';\nimport Dropzone from 'core/dropzone';\n\nlet dropZoneFiles = []; // Store files to upload later\nlet uploadedFileIds = []; // Store file IDs after successful upload\n\n/**\n * Initializes the Homework Modal.\n *\n * @param {int} cmid\n * @param {string} title\n * @param {int} currentHomework\n * @returns {Promise<void>}\n */\nexport const init = async(cmid, title, currentHomework) => {\n    $('#open-homework-chooser').on('click', () => {\n        Ajax.call([{\n            methodname: 'mod_homework_get_homework_chooser',\n            args: {cmid: cmid},\n            done: async function (response) {\n                const modal = await MyModal.create({\n                    title: title,\n                    body: `${response.html}`,\n                    large: true,\n                    removeOnClose: true\n                });\n\n                // Show the modal\n                modal.show();\n\n                // Initialize elements once the modal content is rendered\n                modal.getRoot().on(ModalEvents.shown, () => {\n                    // Initialize the elements after modal is displayed\n                    const dropzoneContainer = modal.getRoot().find('#dropzone-container')[0];\n\n                    initializeDropzone(dropzoneContainer);\n                });\n\n                // Attach an event listener to handle the modal hidden event\n                modal.getRoot().on(ModalEvents.hidden, () => {\n                    console.log('Modal closed!');\n                    modal.destroy();\n                    location.reload();\n                });\n\n                // Attach event listeners for buttons\n                modal.getRoot().on('click', '[data-action=\"submit\"]', (e) => {\n                    e.preventDefault();\n                    handleFormSubmit(modal, currentHomework);\n                });\n                modal.getRoot().on('click', '[data-action=\"cancel\"]', (e) => {\n                    e.preventDefault();\n                    modal.destroy();\n                    location.reload();\n                });\n            },\n            fail: (error) => {\n                console.error(\"Failed to load homework chooser content:\", error);\n            }\n        }]);\n    });\n};\n\nconst initializeDropzone = (container) => {\n    const dropZone = new Dropzone(container, \"*/*\", (files) => {\n        dropZoneFiles.push(files[0]); // Store file for later upload\n\n        displayUploadedFile(files[0]);\n    });\n\n    dropZone.setLabel(\"Drop file here (Optional)\");\n    dropZone.init();\n};\n\n// Function to display the uploaded file with a delete button\nconst displayUploadedFile = (file) => {\n    const previewContainer = document.getElementById(\"file-content\"); // Container for preview\n\n    // Clear previous preview\n    previewContainer.innerHTML = \"\";\n\n    if (file.name || file.filename) {\n        // Create wrapper div for the preview and delete button\n        const fileWrapper = document.createElement(\"div\");\n        fileWrapper.style.position = \"relative\";\n        fileWrapper.style.display = \"ruby\";\n\n        // Add the file preview\n        const paragraph = document.createElement(\"p\");\n        if (file.name) {\n            paragraph.textContent = `${file.name}`;\n        } else if (file.filename) {\n            paragraph.textContent = `${file.filename}`;\n        }\n        fileWrapper.appendChild(paragraph);\n\n        // Create the delete \"X\" button\n        const deleteButton = document.createElement(\"span\");\n        deleteButton.textContent = \"X\";\n        deleteButton.style.cursor = \"pointer\";\n        deleteButton.style.background = \"red\";\n        deleteButton.style.color = \"white\";\n        deleteButton.style.padding = \"2px 5px\";\n        deleteButton.style.fontWeight = \"bold\";\n        deleteButton.style.marginLeft = \"5px\";\n\n        // Delete the file preview and reset dropZoneFiles when \"X\" is clicked\n        deleteButton.addEventListener(\"click\", () => {\n            previewContainer.innerHTML = \"\"; // Remove the preview\n            dropZoneFiles = []; // Clear the files array\n        });\n\n        fileWrapper.appendChild(deleteButton);\n\n        previewContainer.appendChild(fileWrapper);\n    }\n};\n\nconst uploadDropzoneFile = async () => {\n    for (let file of dropZoneFiles) {\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", file);\n\n            const response = await fetch(\"/mod/homework/upload_file.php\", {\n                method: \"POST\",\n                body: formData\n            });\n\n            const result = await response.json();\n\n            if (response.ok && result.status === 'success') {\n                console.log(\"File uploaded successfully:\", file.name);\n                uploadedFileIds.push(result.fileid); // Store the file ID\n            } else {\n                console.error(\"Failed to upload file:\", file.name);\n            }\n        } catch (error) {\n            console.error(\"Error uploading file:\", file.name, error);\n        }\n    }\n    dropZoneFiles = []; // Clear stored file after upload\n};\n\n/**\n * Handles form submission inside the modal.\n * @param {Modal} modal - The instance of the modal containing the form.\n * @param currentHomework - The id of the homework which is being edited.\n */\nconst handleFormSubmit = async (modal, currentHomework) => {\n    let inputField = modal.getRoot().find('#inputField')[0];\n    let linkField = modal.getRoot().find('#link')[0];\n    let startPageInput = modal.getRoot().find('#startPage')[0];\n    let endPageInput = modal.getRoot().find('#endPage')[0];\n    let startTimeInput = modal.getRoot().find('#startTime')[0];\n    let endTimeInput = modal.getRoot().find('#endTime')[0];\n\n    // Set up a custom validity message if the field is empty\n    if (inputField.value.trim() === \"\") {\n        inputField.setCustomValidity(\"Input field must not be empty\");\n    } else {\n        inputField.setCustomValidity(\"\"); // Clear the custom message when input is valid\n    }\n\n    // Manually check the validity of the input field\n    inputField.reportValidity();\n\n    // If the field is invalid, stop the function execution\n    if (!inputField.checkValidity()) {\n        return; // Exit if input field is invalid\n    }\n\n    if (!validatePageRange(startPageInput, endPageInput)) {\n        return;\n    }\n\n    if (!validateTimeRange(startTimeInput, endTimeInput)) {\n        return;\n    }\n\n    await uploadDropzoneFile();\n\n    Ajax.call([{\n        methodname: 'mod_homework_save_homework_material',\n        args: {\n            inputfield: inputField.value,\n            homeworkid: currentHomework,\n            link: linkField.value.trim() !== \"\" ? linkField.value.trim() : null,\n            startpage: startPageInput.value.trim() !== \"\" ? startPageInput.value.trim() : null,\n            endpage: endPageInput.value.trim() !== \"\" ? endPageInput.value.trim() : null,\n            starttime: startTimeInput.value.trim() !== \"\" ? startTimeInput.value.trim() : null,\n            endtime: endTimeInput.value.trim() !== \"\" ? endTimeInput.value.trim() : null,\n            fileid: uploadedFileIds.length ? uploadedFileIds[0] : null\n        },\n        done: function(response) {\n            console.log(\"Data saved successfully:\", response);\n            modal.destroy();\n            location.reload();\n        },\n        fail: function(error) {\n            console.error(\"Failed to save data:\", error);\n        }\n    }]);\n\n    function validatePageRange(startPageInput, endPageInput) {\n        const startPage = parseInt(startPageInput.value, 10);\n        const endPage = parseInt(endPageInput.value, 10);\n\n        if (endPageInput.value !== \"\" && startPageInput.value !== \"\") {\n            if (endPage < startPage) {\n                endPageInput.setCustomValidity(\"End Page must be greater than or equal to Start Page\");\n                endPageInput.reportValidity();\n                return false;\n            } else {\n                endPageInput.setCustomValidity(\"\"); // Clear error message if valid\n            }\n        } else {\n            endPageInput.setCustomValidity(\"\"); // Clear error if either field is empty\n        }\n\n        endPageInput.reportValidity();\n        return endPageInput.checkValidity(); // Return true if valid\n    }\n\n    function validateTimeRange(startTimeInput, endTimeInput) {\n        const startTime = parseInt(startTimeInput.value, 10);\n        const endTime = parseInt(endTimeInput.value, 10);\n\n        if (endTimeInput.value !== \"\" && startTimeInput.value !== \"\") {\n            if (endTime < startTime) {\n                endTimeInput.setCustomValidity(\"End Time must be greater than or equal to Start Time\");\n                endTimeInput.reportValidity();\n                return false;\n            } else {\n                endTimeInput.setCustomValidity(\"\"); // Clear error message if valid\n            }\n        } else {\n            endTimeInput.setCustomValidity(\"\"); // Clear error if either field is empty\n        }\n\n        endTimeInput.reportValidity();\n        return endTimeInput.checkValidity(); // Return true if valid\n    }\n};"],"names":["_interopRequireDefault","e","__esModule","default","_jquery","_ajax","_modal_homework","_modal_events","_dropzone","dropZoneFiles","uploadedFileIds","_exports","init","async","cmid","title","currentHomework","$","on","Ajax","call","methodname","args","done","response","modal","MyModal","create","body","html","large","removeOnClose","show","getRoot","ModalEvents","shown","dropzoneContainer","find","initializeDropzone","hidden","console","log","destroy","location","reload","preventDefault","handleFormSubmit","fail","error","container","dropZone","Dropzone","files","push","displayUploadedFile","setLabel","file","previewContainer","document","getElementById","innerHTML","name","filename","fileWrapper","createElement","style","position","display","paragraph","textContent","appendChild","deleteButton","cursor","background","color","padding","fontWeight","marginLeft","addEventListener","inputField","linkField","startPageInput","endPageInput","startTimeInput","endTimeInput","value","trim","setCustomValidity","reportValidity","checkValidity","startPage","parseInt","endPage","validatePageRange","startTime","endTime","validateTimeRange","formData","FormData","append","fetch","method","result","json","ok","status","fileid","uploadDropzoneFile","inputfield","homeworkid","link","startpage","endpage","starttime","endtime","length"],"mappings":"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"}