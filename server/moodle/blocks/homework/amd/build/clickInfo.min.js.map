{"version":3,"file":"clickInfo.min.js","sources":["../src/clickInfo.js"],"sourcesContent":["import $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport MyModal from 'block_homework/modals';\n\n/**\n * homework/amd/src/modal_homework.js\n *\n * @package\n * @copyright 2024, cs-24-sw-5-01 <cs-24-sw-5-01@student.aau.dk>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\n/**\n * Fetches and initializes the completion modal for the homework module that was clicked on.\n * @param userID ID of currently logged-in user.\n * @returns {Promise<void>} A promise that, when fulfilled, opens the modal\n */\nexport const init = async(userID, readingspeed) => {\n    // Create the modal using block_homework_get_infohomework_modal\n    $(document).ready(function() {\n        $('.timebutton').on('click', (e) => {\n            Ajax.call([{\n                methodname: 'block_homework_get_infohomework_modal',\n                args: {\n                    homeworkID: e.target.id,\n                    readingspeed: readingspeed\n                },\n                done: async function(response) {\n                    const modal = await MyModal.create({\n                        title: \"<a href='\" + response.courseurl + \"'>\" + response.course + \"</a>: <a href='\" + response.homeworkurl + \"'>\" + response.title + \"</a> | \" + response.duedate,\n                        body: `${response.html}`,\n                        large: true,\n                        removeOnClose: true,\n                    });\n\n                    // Show the modal.\n                    await modal.show();\n\n                    // Attach event listeners for buttons\n                    modal.getRoot().on('click', '[data-action=\"submit\"]', (e) => {\n                        e.preventDefault();\n                        handleFormSubmit(userID, modal);\n                    });\n\n                    modal.getRoot().on('click', '[data-action=\"cancel\"]', (e) => {\n                        e.preventDefault();\n                        modal.destroy();\n                    });\n                },\n                fail: (error) => {\n                    throw new Error(`Failed to load info homework content: ${JSON.stringify(error)}`);\n                }\n            }]);\n        });\n    });\n};\n\n/**\n * Handle clicking the submit button of the form and updating the database with completion and times\n * @param userID ID of currently logged-in user\n * @param modal The modal that is being submitted\n */\nconst handleFormSubmit = (userID, modal) => {\n    let literatureInputFields = document.querySelectorAll('.homework-time-literature');\n    let linksInputFields = document.querySelectorAll('.homework-time-links');\n    let videosInputFields = document.querySelectorAll('.homework-time-videos');\n    let timeData = [];\n    // Finds the data of all input fields, both literature, link and video, and adds the ID and time to an array.\n    for (let inputField of literatureInputFields) {\n        if (inputField.value !== \"\") {\n            timeData.push({\n                id: inputField.id,\n                time: inputField.value,\n            });\n        }\n    }\n    for (let inputField of linksInputFields) {\n        if (inputField.value !== \"\") {\n            timeData.push({\n                id: inputField.id,\n                time: inputField.value,\n            });\n        }\n    }\n    for (let inputField of videosInputFields) {\n        if (inputField.value !== \"\") {\n            timeData.push({\n                id: inputField.id,\n                time: inputField.value,\n            });\n        }\n    }\n\n    // If no data has been filled, do nothing.\n    if (!timeData.length) {\n        modal.destroy();\n        return;\n    }\n\n    // If data has been filled, call block_homework_save_homeworktime with the user ID and data\n    Ajax.call([{\n        methodname: 'block_homework_save_homeworktime',\n        args: {\n            user: userID,\n            timeCompleted: timeData,\n        },\n        done: function() {\n            // Close the modal after successful submission\n            modal.destroy();\n            location.reload();\n        },\n        fail: function(error) {\n            console.error(\"Failed to save data:\", error);\n        }\n    }]);\n};\n"],"names":["_interopRequireDefault","e","__esModule","default","_jquery","_ajax","_modals","_exports","init","async","userID","readingspeed","$","document","ready","on","Ajax","call","methodname","args","homeworkID","target","id","done","response","modal","MyModal","create","title","courseurl","course","homeworkurl","duedate","body","html","large","removeOnClose","show","getRoot","preventDefault","handleFormSubmit","destroy","fail","error","Error","JSON","stringify","literatureInputFields","querySelectorAll","linksInputFields","videosInputFields","timeData","inputField","value","push","time","length","user","timeCompleted","location","reload","console"],"mappings":"qIAE4C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;;kFAF5CG,QAAAJ,uBAAAI,SACAC,MAAAL,uBAAAK,OACAC,QAAAN,uBAAAM,SAsDEC,SAAAC,KAtCkBC,MAAMC,OAAQC,iBAE9B,EAAAC,iBAAEC,UAAUC,OAAM,YACd,EAAAF,QAAAA,SAAE,eAAeG,GAAG,SAAUd,IAC1Be,MAAIb,QAACc,KAAK,CAAC,CACPC,WAAY,wCACZC,KAAM,CACFC,WAAYnB,EAAEoB,OAAOC,GACrBX,aAAcA,cAElBY,KAAMd,eAAee,UACjB,MAAMC,YAAcC,QAAOvB,QAACwB,OAAO,CAC/BC,MAAO,YAAcJ,SAASK,UAAY,KAAOL,SAASM,OAAS,kBAAoBN,SAASO,YAAc,KAAOP,SAASI,MAAQ,UAAYJ,SAASQ,QAC3JC,KAAM,GAAGT,SAASU,OAClBC,OAAO,EACPC,eAAe,UAIbX,MAAMY,OAGZZ,MAAMa,UAAUvB,GAAG,QAAS,0BAA2Bd,IACnDA,EAAEsC,iBACFC,iBAAiB9B,OAAQe,MAAM,IAGnCA,MAAMa,UAAUvB,GAAG,QAAS,0BAA2Bd,IACnDA,EAAEsC,iBACFd,MAAMgB,SAAS,GAEtB,EACDC,KAAOC,QACH,MAAM,IAAIC,MAAM,yCAAyCC,KAAKC,UAAUH,SAAS,IAEtF,GAEX,GAAE,EAQN,MAAMH,iBAAmBA,CAAC9B,OAAQe,SAC9B,IAAIsB,sBAAwBlC,SAASmC,iBAAiB,6BAClDC,iBAAmBpC,SAASmC,iBAAiB,wBAC7CE,kBAAoBrC,SAASmC,iBAAiB,yBAC9CG,SAAW,GAEf,IAAK,IAAIC,cAAcL,sBACM,KAArBK,WAAWC,OACXF,SAASG,KAAK,CACVhC,GAAI8B,WAAW9B,GACfiC,KAAMH,WAAWC,QAI7B,IAAK,IAAID,cAAcH,iBACM,KAArBG,WAAWC,OACXF,SAASG,KAAK,CACVhC,GAAI8B,WAAW9B,GACfiC,KAAMH,WAAWC,QAI7B,IAAK,IAAID,cAAcF,kBACM,KAArBE,WAAWC,OACXF,SAASG,KAAK,CACVhC,GAAI8B,WAAW9B,GACfiC,KAAMH,WAAWC,QAMxBF,SAASK,OAMdxC,MAAIb,QAACc,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,CACFsC,KAAM/C,OACNgD,cAAeP,UAEnB5B,KAAM,WAEFE,MAAMgB,UACNkB,SAASC,QACZ,EACDlB,KAAM,SAASC,OACXkB,QAAQlB,MAAM,uBAAwBA,MAC1C,KAlBAlB,MAAMgB,SAmBP,CACL"}